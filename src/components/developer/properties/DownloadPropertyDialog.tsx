import { Dialog, DialogContent, DialogHeader, DialogTitle } from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { Download, FileSpreadsheet, Eye } from "lucide-react";
import { useToast } from "@/hooks/use-toast";
import { Parcel } from "@/utils/mockData/types";
import { formatCurrency } from "@/utils/format";

interface DownloadPropertyDialogProps {
  parcel: Parcel | null;
  open: boolean;
  onOpenChange: (open: boolean) => void;
}

export const DownloadPropertyDialog = ({
  parcel,
  open,
  onOpenChange,
}: DownloadPropertyDialogProps) => {
  const { toast } = useToast();

  if (!parcel) return null;

  const handleDownloadPDF = () => {
    toast({
      title: "T√©l√©chargement d√©marr√©",
      description: "Le fichier PDF sera bient√¥t disponible",
    });
    // Logique de t√©l√©chargement PDF √† impl√©menter
  };

  const handleDownloadExcel = () => {
    toast({
      title: "T√©l√©chargement d√©marr√©",
      description: "Le fichier Excel sera bient√¥t disponible",
    });
    // Logique de t√©l√©chargement Excel √† impl√©menter
  };

  const handlePreview = () => {
    toast({
      title: "Aper√ßu",
      description: "L'aper√ßu sera bient√¥t disponible",
    });
    // Logique d'aper√ßu √† impl√©menter
  };

  return (
    <Dialog open={open} onOpenChange={onOpenChange}>
      <DialogContent className="sm:max-w-[600px]">
        <DialogHeader>
          <DialogTitle className="flex items-center gap-2">
            <Download className="h-5 w-5" />
            T√©l√©charger la Fiche du Bien
          </DialogTitle>
        </DialogHeader>

        <div className="space-y-6">
          <div className="grid grid-cols-2 gap-4">
            <div>
              <p className="text-sm font-medium">Num√©ro TF</p>
              <p className="text-sm text-muted-foreground">{parcel.titleDeedNumber}</p>
            </div>
            <div>
              <p className="text-sm font-medium">Localisation</p>
              <p className="text-sm text-muted-foreground">{parcel.address}</p>
            </div>
            <div>
              <p className="text-sm font-medium">Superficie</p>
              <p className="text-sm text-muted-foreground">{parcel.surface} m¬≤</p>
            </div>
            <div>
              <p className="text-sm font-medium">Prix</p>
              <p className="text-sm text-muted-foreground">
                {formatCurrency(parcel.tnbInfo.pricePerMeter)} DHS/m¬≤
              </p>
            </div>
            <div>
              <p className="text-sm font-medium">Statut</p>
              <p className="text-sm text-muted-foreground">
                {parcel.status === 'AVAILABLE' ? 'üü¢ Disponible' : 
                 parcel.status === 'UNAVAILABLE' ? 'üî¥ Indisponible' : 
                 'üü° En Transaction'}
              </p>
            </div>
            <div>
              <p className="text-sm font-medium">Statut Fiscal</p>
              <p className="text-sm text-muted-foreground">
                {parcel.taxStatus === 'PAID' ? '‚úÖ Pay√©' : '‚ùå Impay√©'}
              </p>
            </div>
          </div>

          <div className="flex flex-col sm:flex-row gap-3 pt-4">
            <Button 
              className="flex-1"
              onClick={handleDownloadPDF}
            >
              <Download className="mr-2 h-4 w-4" />
              T√©l√©charger PDF
            </Button>
            <Button 
              variant="outline" 
              className="flex-1"
              onClick={handleDownloadExcel}
            >
              <FileSpreadsheet className="mr-2 h-4 w-4" />
              T√©l√©charger Excel
            </Button>
            <Button 
              variant="secondary"
              className="flex-1"
              onClick={handlePreview}
            >
              <Eye className="mr-2 h-4 w-4" />
              Aper√ßu
            </Button>
          </div>
        </div>
      </DialogContent>
    </Dialog>
  );
};